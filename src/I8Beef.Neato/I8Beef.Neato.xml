<?xml version="1.0"?>
<doc>
    <assembly>
        <name>I8Beef.Neato</name>
    </assembly>
    <members>
        <member name="T:I8Beef.Neato.BeeHive.BeeHiveClient">
            <summary>
            BeeHive client.
            </summary>
        </member>
        <member name="M:I8Beef.Neato.BeeHive.BeeHiveClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:I8Beef.Neato.BeeHive.BeeHiveClient"/> class.
            </summary>
            <param name="username">Username.</param>
            <param name="password">Password.</param>
        </member>
        <member name="M:I8Beef.Neato.BeeHive.BeeHiveClient.GetMapsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Send GetMaps request.
            </summary>
            <param name="serialNumber">Serial number.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:I8Beef.Neato.BeeHive.Protocol.MapsInformation"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.BeeHive.BeeHiveClient.GetPersistentMapsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Send GetPersistentMaps request.
            </summary>
            <param name="serialNumber">Serial number.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.BeeHive.BeeHiveClient.GetRobotsAsync(System.Threading.CancellationToken)">
            <summary>
            Send GetRobots request.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:System.Collections.Generic.IList`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.BeeHive.BeeHiveClient.GetUserAsync(System.Threading.CancellationToken)">
            <summary>
            Send GetUser request.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:I8Beef.Neato.BeeHive.Protocol.UserInformation"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.BeeHive.BeeHiveClient.SendRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sends a request.
            </summary>
            <param name="requestMessage">Request message.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>An <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.BeeHive.BeeHiveClient.AuthorizeAsync(System.Threading.CancellationToken)">
            <summary>
            Authorize.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Access token.</returns>
        </member>
        <member name="T:I8Beef.Neato.BeeHive.Protocol.ErrorResponse">
            <summary>
            Error reponse.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.ErrorResponse.Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.ErrorResponse.Errors">
            <summary>
            Errors.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.BeeHive.Protocol.MapInformation">
            <summary>
            Map information.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.Version">
            <summary>
            The map format version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.Id">
            <summary>
            The map identifier.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.Url">
            <summary>
            The temporary map url.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.UrlValidForSeconds">
            <summary>
            The expiration time (in seconds) of the url.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.RunId">
            <summary>
            The run unique identifier.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.Status">
            <summary>
            Map status.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.LaunchedFrom">
            <summary>
            Defines if the cleaning event has been launched from robot, schedule or app.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.Error">
            <summary>
            Must be null if there are no errors. See Error Codes here below for a list of possible errors.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.Category">
            <summary>
            Cleaning category.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.Mode">
            <summary>
            Cleaning mode.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.Modifier">
            <summary>
            The cleaning frequency. 1 normal 2 double.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.StartAt">
            <summary>
            The ISO8601 formatted GMT date and time stating when the run was started.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.EndAt">
            <summary>
            The ISO8601 formatted GMT date and time stating when the run was ended.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.EndOrientationRelativeDegrees">
            <summary>
            The robot orientation when the run was finished or errored out.
            The value can be 0-360 indicating the degrees in clockwise rotation,
            where 0 is looking rightwards on the map.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.RunChargeAtStart">
            <summary>
            The battery charge (in percentage) when the run was started.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.RunChargeAtEnd">
            <summary>
            The battery charge (in percentage) when the run was finished or errored out.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.SuspendedCleaningChargingCount">
            <summary>
            The number of times the batteries were recharged during the run.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.TimeInSuspendedCleaning">
            <summary>
            Expresses the total time spent in suspended cleaning during the run (in seconds).
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.TimeInError">
            <summary>
            Expresses the total time spent in error state during the run (in seconds).
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.TimeInPause">
            <summary>
            Expresses the total time spent in paused state during the run (in seconds).
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.CleanedArea">
            <summary>
            The area cleaned during the run (in square meters).
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.BaseCount">
            <summary>
            The number of bases seen.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.IsDocked">
            <summary>
            Is the robot docket at the end of the run.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapInformation.Delocalized">
            <summary>
            Defines if the robot was unable of properly relocalizing during the
            run (for instance, when picked up and moved by user).
            </summary>
        </member>
        <member name="T:I8Beef.Neato.BeeHive.Protocol.MapLaunchedFrom">
            <summary>
            Map launched from.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.BeeHive.Protocol.MapLaunchedFrom.Robot">
            <summary>
            Robot.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.BeeHive.Protocol.MapLaunchedFrom.Schedule">
            <summary>
            Schedule.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.BeeHive.Protocol.MapLaunchedFrom.App">
            <summary>
            App.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.BeeHive.Protocol.MapsInformation">
            <summary>
            Maps information
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapsInformation.Stats">
            <summary>
            Stats.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.MapsInformation.Maps">
            <summary>
            Maps.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.BeeHive.Protocol.MapStatus">
            <summary>
            Map status.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.BeeHive.Protocol.MapStatus.Incomplete">
            <summary>
            Incomplete.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.BeeHive.Protocol.MapStatus.Complete">
            <summary>
            Complete.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.BeeHive.Protocol.MapStatus.Canceled">
            <summary>
            Canceled.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.BeeHive.Protocol.PersistentMapInformation">
            <summary>
            Persistent map information.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.PersistentMapInformation.Id">
            <summary>
            Map id.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.PersistentMapInformation.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.PersistentMapInformation.Url">
            <summary>
            Url.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.PersistentMapInformation.RawFloorMapUrl">
            <summary>
            Raw floor map url.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.PersistentMapInformation.UrlValidForSeconds">
            <summary>
            The expiration time (in seconds) of the url.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.BeeHive.Protocol.RobotInformation">
            <summary>
            Robot information.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.RobotInformation.LinkedAt">
            <summary>
            LinkedAt.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.RobotInformation.Model">
            <summary>
            Model.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.RobotInformation.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.RobotInformation.Prefix">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.RobotInformation.PurchasedAt">
            <summary>
            PurchasedAt.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.RobotInformation.SecretKey">
            <summary>
            SecretKey.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.RobotInformation.Serial">
            <summary>
            Serial.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.RobotInformation.Traits">
            <summary>
            Traits.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.BeeHive.Protocol.SessionRequest">
            <summary>
            Session Request.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.SessionRequest.Email">
            <summary>
            Email.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.SessionRequest.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.SessionRequest.Platform">
            <summary>
            Platform.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.SessionRequest.Token">
            <summary>
            Token.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.BeeHive.Protocol.SessionResponse">
            <summary>
            Session Request.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.SessionResponse.AccessToken">
            <summary>
            Email.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.BeeHive.Protocol.StatsInformation">
            <summary>
            Stats information.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.BeeHive.Protocol.UserInformation">
            <summary>
            User information.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.UserInformation.City">
            <summary>
            City.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.UserInformation.Company">
            <summary>
            Company.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.UserInformation.CountryCode">
            <summary>
            Country code.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.UserInformation.FirstName">
            <summary>
            First name.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.UserInformation.Id">
            <summary>
            Id.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.UserInformation.LastName">
            <summary>
            Last name.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.UserInformation.Locale">
            <summary>
            Locale.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.UserInformation.PhoneNumber">
            <summary>
            Phone number.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.UserInformation.PostCode">
            <summary>
            Post code.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.UserInformation.Province">
            <summary>
            Province.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.UserInformation.StateRegion">
            <summary>
            State or region.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.UserInformation.Street1">
            <summary>
            Street 1.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.BeeHive.Protocol.UserInformation.Street2">
            <summary>
            Street 2.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.NucleoClient">
            <summary>
            Nucleo client.
            </summary>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:I8Beef.Neato.Nucleo.NucleoClient"/> class.
            </summary>
            <param name="serialNumber">Serial number.</param>
            <param name="secretKey">Secret key.</param>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.DismissCurrentAlertAsync">
            <summary>
            Send DismissCurrentAlert request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/></returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.GetRobotInfoAsync">
            <summary>
            Send GetRobotInfo request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/></returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.GetRobotStateAsync">
            <summary>
            Send GetRobotState request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StateResponse`1"/></returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.FindMeAsync">
            <summary>
            Send FindMe request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/></returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.GetGeneralInfoAsync">
            <summary>
            Send GetGeneralInfo request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.StartCleaningAsync(I8Beef.Neato.Nucleo.Protocol.Services.HouseCleaning.StartCleaningParameters)">
            <summary>
            Send StartCleaning request.
            </summary>
            <param name="parameters">Parameters.</param>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StateResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.StopCleaningAsync">
            <summary>
            Send StopCleaning request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StateResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.PauseCleaningAsync">
            <summary>
            Send PauseCleaning request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StateResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.ResumeCleaningAsync">
            <summary>
            Send ResumeCleaning request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StateResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.SendToBaseAsync">
            <summary>
            Send SendToBase request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StateResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.GetLocalStatsAsync">
            <summary>
            Send GetLocalStats request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.GetRobotManualCleaningInfoAsync">
            <summary>
            Send GetRobotManualCleaningInfo request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.GetMapBoundariesAsync(I8Beef.Neato.Nucleo.Protocol.Services.Maps.GetMapBoundaries)">
            <summary>
            Send GetMapBoundaries request.
            </summary>
            <param name="parameters">Parameters.</param>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.SetMapBoundariesAsync(I8Beef.Neato.Nucleo.Protocol.Services.Maps.SetMapBoundaries)">
            <summary>
            Send SetMapBoundaries request.
            </summary>
            <param name="parameters">Parameters.</param>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.StartPersistentMapExplorationAsync">
            <summary>
            Send StartPersistentMapExploration request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.GetPreferencesAdvanced1Async">
            <summary>
            Send GetPreferences request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.SetPreferencesAdvanced1Async(I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences)">
            <summary>
            Send SetPreferences request.
            </summary>
            <param name="parameters">Parameters.</param>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.GetScheduleAsync">
            <summary>
            Send GetSchedule request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.SetScheduleAsync(I8Beef.Neato.Nucleo.Protocol.Services.Schedule.Schedule)">
            <summary>
            Send SetSchedule request.
            </summary>
            <param name="parameters">Parameters.</param>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.EnableScheduleAsync">
            <summary>
            Send EnableSchedule request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.DisableScheduleAsync">
            <summary>
            Send DisableSchedule request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.SendCommandAsync``1(I8Beef.Neato.Nucleo.Protocol.CommandType,System.Object)">
            <summary>
            Send a standard command.
            </summary>
            <typeparam name="TResponse">Type of response message.</typeparam>
            <param name="command">Command to send.</param>
            <param name="parameters">Parameters.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.NucleoClient.SendRequestAsync(System.Net.Http.HttpRequestMessage)">
            <summary>
            Sends a request.
            </summary>
            <param name="requestMessage">Request message.</param>
            <returns>An <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.ActionType">
            <summary>
            Action type.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.Invalid">
            <summary>
            Invalid.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.HouseCleaning">
            <summary>
            House Cleaning.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.SpotCleaning">
            <summary>
            Spot Cleaning.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.ManualCleaning">
            <summary>
            Manual Cleaning.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.Docking">
            <summary>
            Docking.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.UserMenuActive">
            <summary>
            User Menu Active.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.SuspendedCleaning">
            <summary>
            Suspended Cleaning.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.Updating">
            <summary>
            Updating.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.CopyingLogs">
            <summary>
            Copying Logs.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.RecoveringLocation">
            <summary>
            Recovering Location.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.IecTest">
            <summary>
            IEC Test.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.MapCleaning">
            <summary>
            Map cleaning.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.ExploringMap">
            <summary>
            Exploring map (creating a persistent map).
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.AcquiringPersistentMapIds">
            <summary>
            Acquiring Persistent Map IDs.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.CreatingAndUploadingMap">
            <summary>
            Creating and Uploading Map.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ActionType.SuspendedExploration">
            <summary>
            Suspended Exploration.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.AvailableCommands">
            <summary>
            Available commands.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableCommands.Start">
            <summary>
            Start.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableCommands.Stop">
            <summary>
            Stop.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableCommands.Pause">
            <summary>
            Pause.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableCommands.Resume">
            <summary>
            Resume.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableCommands.GoToBase">
            <summary>
            Go to base.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.AvailableServices">
            <summary>
            Available services.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableServices.FindMe">
            <summary>
            Find me.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableServices.GeneralInfo">
            <summary>
            General info.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableServices.HouseCleaning">
            <summary>
            House cleaning.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableServices.LocalStats">
            <summary>
            Local stats.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableServices.ManualCleaning">
            <summary>
            Manual cleaning.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableServices.Maps">
            <summary>
            Maps.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableServices.Preferences">
            <summary>
            Preferences.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableServices.Schedule">
            <summary>
            Schedule.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.AvailableServices.SpotCleaning">
            <summary>
            Spot cleaning.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.CleaningCategory">
            <summary>
            Cleaning category.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CleaningCategory.HouseCleaning">
            <summary>
            House cleaning.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CleaningCategory.SpotCleaning">
            <summary>
            Spot cleaning.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CleaningCategory.PersistentMap">
            <summary>
            Persistent map.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.CleaningFrequency">
            <summary>
            Cleaning frequency.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CleaningFrequency.Normal">
            <summary>
            Normal.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CleaningFrequency.Double">
            <summary>
            Double.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.CleaningInformation">
            <summary>
            Cleaning information.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.CleaningInformation.Category">
            <summary>
            Category.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.CleaningInformation.Mode">
            <summary>
            Mode.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.CleaningInformation.Modifier">
            <summary>
            Modifier.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.CleaningInformation.NavigationMode">
            <summary>
            Navigation mode.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.CleaningInformation.SpotWidth">
            <summary>
            Spot width.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.CleaningInformation.SpotHeight">
            <summary>
            Spot height.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.CleaningMode">
            <summary>
            Cleaning mode.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CleaningMode.Eco">
            <summary>
            Eco.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CleaningMode.Turbo">
            <summary>
            Turbo.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.CommandType">
            <summary>
            Command type.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.DismissCurrentAlert">
            <summary>
            DismissCurrentAlert.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.FindMe">
            <summary>
            FindMe.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.GetGeneralInfo">
            <summary>
            GetGeneralInfo.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.GetRobotInfo">
            <summary>
            GetRobotInfo.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.GetRobotState">
            <summary>
            GetRobotState.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.StartCleaning">
            <summary>
            StartCleaning.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.StopCleaning">
            <summary>
            StopCleaning.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.PauseCleaning">
            <summary>
            PauseCleaning.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.ResumeCleaning">
            <summary>
            ResumeCleaning.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.SendToBase">
            <summary>
            SendToBase.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.GetLocalStats">
            <summary>
            GetLocalStats.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.GetRobotManualCleaningInfo">
            <summary>
            GetRobotManualCleaningInfo.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.GetMapBoundaries">
            <summary>
            GetMapBoundaries.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.SetMapBoundaries">
            <summary>
            SetMapBoundaries.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.StartPersistentMapExploration">
            <summary>
            startPersistentMapExploration.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.SetPreferences">
            <summary>
            SetPreferences.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.GetPreferences">
            <summary>
            GetPreferences.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.SetSchedule">
            <summary>
            SetSchedule.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.GetSchedule">
            <summary>
            GetSchedule.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.EnableSchedule">
            <summary>
            EnableSchedule.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.CommandType.DisableSchedule">
            <summary>
            DisableSchedule.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.DetailInformation">
            <summary>
            Detail information.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.DetailInformation.IsCharging">
            <summary>
            Is charging.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.DetailInformation.IsDocked">
            <summary>
            Is docked.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.DetailInformation.DockHasBeenSeen">
            <summary>
            Dock has been seen.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.DetailInformation.Charge">
            <summary>
            Charge.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.DetailInformation.IsScheduleEnabled">
            <summary>
            Is schedule enabled.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.EmptyResponse">
            <summary>
            Empty response.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.MetaInformation">
            <summary>
            Meta information.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.MetaInformation.ModelName">
            <summary>
            Model name.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.MetaInformation.Firmware">
            <summary>
            Firmware.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Request">
            <summary>
            Nucelo Request.
            </summary>
        </member>
        <member name="M:I8Beef.Neato.Nucleo.Protocol.Request.#ctor(System.Int32,I8Beef.Neato.Nucleo.Protocol.CommandType,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:I8Beef.Neato.Nucleo.Protocol.Request"/> class.
            </summary>
            <param name="requestId">Request id.</param>
            <param name="command">Command type.</param>
            <param name="parameters">Parameters object.</param>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Request.RequestId">
            <summary>
            Request ID.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Request.Command">
            <summary>
            Command.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Request.Parameters">
            <summary>
            Parameters.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.ResultType">
            <summary>
            Result type.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ResultType.Ok">
            <summary>
            OK.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ResultType.InvalidJson">
            <summary>
            Invalid JSON.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ResultType.BadRequest">
            <summary>
            Bad request.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ResultType.CommandNotFound">
            <summary>
            Command not found.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ResultType.CommandRejected">
            <summary>
            Command rejected.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.ResultType.Ko">
            <summary>
            KO.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo">
            <summary>
            Robot information.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.ModelNameType">
            <summary>
            Model name.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.CpuMacId">
            <summary>
            CPU MAC ID.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.MainBrdMfgDate">
            <summary>
            Main board manfacturing date.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.RobotMfgDate">
            <summary>
            Robot manfacturing date.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.BoardRev">
            <summary>
            Robot manfacturing date.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.ChassisRev">
            <summary>
            Chassis revision.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.BatteryType">
            <summary>
            Battery type.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.WheelPodType">
            <summary>
            Wheel pod type.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.DropSensorType">
            <summary>
            Drop sensor type.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.MagSensorType">
            <summary>
            Mag sensor type.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.WallSensorType">
            <summary>
            Wall sensor type.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.LDSMotorType">
            <summary>
            LDS Motor type.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.Locale">
            <summary>
            Locale.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.USMode">
            <summary>
            US mode.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.ModelName">
            <summary>
            Model name.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.NeatoServer">
            <summary>
            Neato server.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.CartID">
            <summary>
            Cart ID.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.BrushSpeed">
            <summary>
            Brush speed.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.BrushSpeedEco">
            <summary>
            Brush Speed Eco.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.VacuumSpeed">
            <summary>
            Vacuum speed.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.VacuumPwrPercent">
            <summary>
            Vacuum power Percent.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.VacuumPwrPercentEco">
            <summary>
            Vacuum Power Percent Eco.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.RunTime">
            <summary>
            Run time.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.BrushPresent">
            <summary>
            Brush Present.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.VacuumPresent">
            <summary>
            Vacuum present.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.PadPresent">
            <summary>
            PAD present.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.PlatenPresent">
            <summary>
            Platen present
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.BrushDirection">
            <summary>
            Brush direction.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.VacuumDirection">
            <summary>
            Vacuum direction.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.PadDirection">
            <summary>
            Pad direction.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.CumulativeCartridgeTimeInSecs">
            <summary>
            Cumulative cartridge time in seconds.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.NCleaningsStartedWhereDustBinWasFull">
            <summary>
            N cleanings started where dust bin was full.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.BlowerType">
            <summary>
            Blower type.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.BrushMotorType">
            <summary>
            Brush motor type.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.SideBrushType">
            <summary>
            Side brush type.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.SideBrushPower">
            <summary>
            Side brush power.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.NAutoCycleCleaningsStarted">
            <summary>
            N auto cycle cleanings started.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.HardwareVersionMajor">
            <summary>
            Hardware version major.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.HardwareVersionMinor">
            <summary>
            Hardware version minor.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.SoftwareVersionMajor">
            <summary>
            Software version major.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.SoftwareVersionMinor">
            <summary>
            Software version minor.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.MaxVoltage">
            <summary>
            Max voltage.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.MaxCurrent">
            <summary>
            Max current.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.VoltageMultiplier">
            <summary>
            Voltage multiplier.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.CurrentMultiplier">
            <summary>
            Crrent multiplier.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.CapacityMode">
            <summary>
            Capacity mode.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.DesignCapacity">
            <summary>
            Design capacity
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.DesignVoltage">
            <summary>
            Design voltage.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.ManufacturingDay">
            <summary>
            Manufacturing day.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.ManufacturingMonth">
            <summary>
            Manufacturing month.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.ManufacturingYear">
            <summary>
            Manufacturing year.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.SerialNumber">
            <summary>
            Serial number.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.SoftwareVersion">
            <summary>
            Software version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.DataVersion">
            <summary>
            Data version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.ManufacturingAccess">
            <summary>
            Manufacturing access.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.ManufacturingName">
            <summary>
            Manufacturing name.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.DeviceName">
            <summary>
            Device name.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.ChemistryName">
            <summary>
            Chemistry name.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.Major">
            <summary>
            Major version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.Minor">
            <summary>
            Minor version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.Build">
            <summary>
            Build version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.LdsVer">
            <summary>
            LDS version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.LdsSerial">
            <summary>
            LDS Serial.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.LdsCPU">
            <summary>
            LDS CPU.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.LdsBuildNum">
            <summary>
            LDS build number.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.BootLoaderVersion">
            <summary>
            Bootloader version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.UiBoardSoftwareVer">
            <summary>
            UI board software version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.UiBoardHardwareVer">
            <summary>
            UI board hardware version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.QaState">
            <summary>
            QA state.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.Manufacturer">
            <summary>
            Manufacturer
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.DriverVersion">
            <summary>
            Driver version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.DriverID">
            <summary>
            Driver ID.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.UltrasonicSoftware">
            <summary>
            Ultrasonic software version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.UltrasonicHardware">
            <summary>
            Ultrasonic hardware version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.BlowerHardware">
            <summary>
            Blower hardware version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.BlowerSoftwareMajor">
            <summary>
            Blower software version major number.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo.BlowerSoftwareMinor">
            <summary>
            Blower software version minor number.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.AuthorizationStatus">
            <summary>
            Authorization status.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.AuthorizationStatus.NotSupported">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.AuthorizationStatus.Genuine">
            <summary>
            Genuine.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.AuthorizationStatus.NotGenuine">
            <summary>
            Not genuine.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.BatteryInformation">
            <summary>
            BatteryInformation response.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.BatteryInformation.AuthorizationStatus">
            <summary>
            The battery authorization status.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.BatteryInformation.Level">
            <summary>
            Expresses the battery bar level (1-4).
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.BatteryInformation.ManufacturingDate">
            <summary>
            The ISO8601 formatted date (YYYY-MM-DD) stating when the battery was manufactured.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.BatteryInformation.TimeToEmpty">
            <summary>
            How many minutes is the battery able to run. null if the robot is currently computing it.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.BatteryInformation.TimeToFullCharge">
            <summary>
            How many minutes are needed to fully recharge the battery at its current level. null if the
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.BatteryInformation.TotalCharges">
            <summary>
            The total number of battery charges since it was manufactured.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.BatteryInformation.Vendor">
            <summary>
            The vendor name.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.GetGeneralInfo">
            <summary>
            GetGeneralInfo.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.GetGeneralInfo.Battery">
            <summary>
            Battery info.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.GetGeneralInfo.Firmware">
            <summary>
            The software version, defined according to Semantic Versioning principles.
            The format is MAJOR.MINOR.PATCH-BUILDNUM, where BUILDNUM is a sequentially increasing number.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.GetGeneralInfo.Language">
            <summary>
            The robot's interface language (if available).
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.GetGeneralInfo.Model">
            <summary>
            The robot model identifier. MUST be the same one as reported in meta/model.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.GetGeneralInfo.ProductNumber">
            <summary>
            The Product number.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.GetGeneralInfo.Serial">
            <summary>
            The robot serial number.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.HouseCleaning.NavigationMode">
            <summary>
            Navigation mode.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.Services.HouseCleaning.NavigationMode.Normal">
            <summary>
            Normal.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.Services.HouseCleaning.NavigationMode.ExtraCare">
            <summary>
            Extra care.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.Services.HouseCleaning.NavigationMode.Deep">
            <summary>
            Deep.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.HouseCleaning.StartCleaningParameters">
            <summary>
            Start cleaning.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.HouseCleaning.StartCleaningParameters.Category">
            <summary>
            Category.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.HouseCleaning.StartCleaningParameters.Mode">
            <summary>
            Mode.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.HouseCleaning.StartCleaningParameters.Modifier">
            <summary>
            Modifier.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.HouseCleaning.StartCleaningParameters.NavigationMode">
            <summary>
            NavigationMode.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.HouseCleaning.StartCleaningParameters.SpotHeight">
            <summary>
            SpotHeight.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.HouseCleaning.StartCleaningParameters.SpotWidth">
            <summary>
            SpotWidth.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.CleaningStats">
            <summary>
            House cleaning.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.CleaningStats.TotalCleanedArea">
            <summary>
            Total cleaned area in the robot's lifetime (in square meters).
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.CleaningStats.TotalCleaningTime">
            <summary>
            Total time in the robot's lifetime (in seconds).
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.CleaningStats.AverageCleanedArea">
            <summary>
            Average cleaned area in the robot's lifetime (in square meters).
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.CleaningStats.AverageCleaningTime">
            <summary>
            Average time in the robot's lifetime (in seconds).
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.CleaningStats.History">
            <summary>
            contains the last N cleaning events for a specific category. The elements are stored in descending order,
            the most recent item is the top most element of the array.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.History">
            <summary>
            History.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.History.Start">
            <summary>
            The ISO8601 formatted GMT date and time stating when the cleaning event started.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.History.End">
            <summary>
            The ISO8601 formatted GMT date and time stating when the cleaning event ended..
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.History.SuspendedCleaningChargingTime">
            <summary>
            The minutes the robot was on dock charging, during the last cleaning cycle.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.History.ErrorTime">
            <summary>
            The seconds the robot was on error state, during the last cleaning cycle.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.History.PauseTime">
            <summary>
            The seconds the robot was on pause state, during the last cleaning cycle.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.History.Mode">
            <summary>
            The cleaning mode.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.History.Area">
            <summary>
            The area cleaned during this cleaning event.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.History.LaunchedFrom">
            <summary>
            Defines if the cleaning event has been lanched from robot, schedule or app.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.History.Completed">
            <summary>
            <c>true</c> if the cleaning event successfully completes. <c>false</c> otherwise.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.LocalStats">
            <summary>
            Local stats.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.LocalStats.HouseCleaning">
            <summary>
            HouseCleaning.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.LocalStats.SpotCleaning">
            <summary>
            SpotCleaning.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.ManualCleaning.RobotManualCleaningInfo">
            <summary>
            Robot manual cleaning info.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.ManualCleaning.RobotManualCleaningInfo.IpAddress">
            <summary>
            IP address.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.ManualCleaning.RobotManualCleaningInfo.Port">
            <summary>
            Port.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.ManualCleaning.RobotManualCleaningInfo.SSID">
            <summary>
            SSID.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.Maps.Boundary">
            <summary>
            Boundary.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Maps.Boundary.Color">
            <summary>
            The hex color value of the boundary. May be empty.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Maps.Boundary.Enabled">
            <summary>
            Whether or not the boundary is enabled.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Maps.Boundary.Id">
            <summary>
            Id.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Maps.Boundary.Name">
            <summary>
            The friendly identifier name of the boundary. May be empty.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Maps.Boundary.Type">
            <summary>
            Boundary type.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Maps.Boundary.Vertices">
            <summary>
            Vertices.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.Maps.BoundaryType">
            <summary>
            Boundary type.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.Services.Maps.BoundaryType.Polyline">
            <summary>
            A non crossable polyline such as one or multiple jointed mag strip (such as a Z-shaped element).
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.Maps.GetMapBoundaries">
            <summary>
            GetMapBoundaries.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Maps.GetMapBoundaries.MapId">
            <summary>
            The unique persistent map id originally assigned by the robot.
            These id can be retrieved with the appropiate call to Beehive.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.Maps.MapBoundaries">
            <summary>
            Map boundaries.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Maps.MapBoundaries.Boundaries">
            <summary>
            All the user-defined boundaries. Each element of the array defines one boundary.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.Maps.SetMapBoundaries">
            <summary>
            SetMapBoundaries.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Maps.SetMapBoundaries.MapId">
            <summary>
            The unique persistent map id originally assigned by the robot.
            These id can be retrieved with the appropiate call to Beehive.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Maps.SetMapBoundaries.Boundaries">
            <summary>
            All the user-defined boundaries. Each element of the array defines one boundary.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences">
            <summary>
            Preferences.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences.RobotSounds">
            <summary>
            Play Robot sounds.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences.DirtbinAlert">
            <summary>
            Show dirt bin alert.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences.AllAlerts">
            <summary>
            Show generic robot alerts.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences.Leds">
            <summary>
            Turn on leds
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences.ButtonClicks">
            <summary>
            Turn on button clicks
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences.DirtbinAlertReminderInterval">
            <summary>
            Define the dirt bin alert frequency (expressed in minutes). The accepted range is 30-150.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences.FilterChangeReminderInterval">
            <summary>
            Define the filter change reminder frequency (expressed in minutes). The accepted range is 43200-129600 (1-3 months).
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences.BrushChangeReminderInterval">
            <summary>
            Define the brush change reminder frequency (expressed in minutes). The accepted range is 172800-345600 (4-8 months).
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences.Clock24h">
            <summary>
            Sets the clock to 24h (true) or 12h (false) format.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences.Locale">
            <summary>
            The locale code.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences.AvailableLocales">
            <summary>
            Available locale codes.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.Schedule">
            <summary>
            Schedule.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.Schedule.Enabled">
            <summary>
            <c>true</c> if enabled, otherwise <c>false</c>.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.Schedule.Type">
            <summary>
            Schedule type.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.Schedule.Events">
            <summary>
            An array of schedule events.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.ScheduleEvent">
            <summary>
            Schedule event.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.ScheduleEvent.Boundary">
            <summary>
            Boundary of zone to clean.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.ScheduleEvent.BoundaryId">
            <summary>
            If provided, the ID of the zone to clean.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.ScheduleEvent.Day">
            <summary>
            The day of the week.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.ScheduleEvent.MapId">
            <summary>
            The map id.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.ScheduleEvent.Mode">
            <summary>
            The cleaning mode.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.ScheduleEvent.StartTime">
            <summary>
            The start time expressed in HH:MM.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.ScheduleType">
            <summary>
            Schedule type.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.ScheduleType.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1">
            <summary>
            Standard response.
            </summary>
            <typeparam name="TData">Type of the Data element.</typeparam>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1.RequestId">
            <summary>
            Request ID.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1.Result">
            <summary>
            Result.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.StandardResponse`1.Data">
            <summary>
            Data.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.StateResponse`1">
            <summary>
            State response.
            </summary>
            <typeparam name="TData">Type of the Data element.</typeparam>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.StateResponse`1.State">
            <summary>
            State.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.StateResponse`1.Action">
            <summary>
            Action.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.StateResponse`1.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.StateResponse`1.Alert">
            <summary>
            Alert.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.StateResponse`1.Cleaning">
            <summary>
            Cleaning information.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.StateResponse`1.Details">
            <summary>
            Detail information.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.StateResponse`1.AvailableCommands">
            <summary>
            Available commands.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.StateResponse`1.AvailableServices">
            <summary>
            Available services.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.Nucleo.Protocol.StateResponse`1.MetaInformation">
            <summary>
            Meta information.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Nucleo.Protocol.StateType">
            <summary>
            State type.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.StateType.Invalid">
            <summary>
            Invalid.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.StateType.Idle">
            <summary>
            Idle.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.StateType.Busy">
            <summary>
            Busy.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.StateType.Paused">
            <summary>
            Paused.
            </summary>
        </member>
        <member name="F:I8Beef.Neato.Nucleo.Protocol.StateType.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="T:I8Beef.Neato.Robot">
            <summary>
            Robot proxy.
            </summary>
        </member>
        <member name="M:I8Beef.Neato.Robot.#ctor(I8Beef.Neato.Nucleo.NucleoClient)">
            <summary>
            Initializes a new instance of the <see cref="T:I8Beef.Neato.Robot"/> class.
            </summary>
            <param name="nucleoClient"><see cref="T:I8Beef.Neato.Nucleo.NucleoClient"/> instance.</param>
        </member>
        <member name="M:I8Beef.Neato.Robot.GetRobotInfoAsync">
            <summary>
            Sends a GetRobotInfo request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.Services.Common.RobotInfo"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.GetRobotStateAsync">
            <summary>
            Sends a GetRobotState request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.RobotState"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.DismissCurrentAlertAsync">
            <summary>
            Sends a dismissCurrentAlert request.
            </summary>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.FindMeAsync">
            <summary>
            Sends a FindMe request.
            </summary>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.GetGeneralInfoAsync">
            <summary>
            Sends a generalInfo request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.Services.GeneralInfo.GetGeneralInfo"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.PauseCleaningAsync">
            <summary>
            Sends a pauseCleaning request.
            </summary>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.ResumeCleaningAsync">
            <summary>
            Sends a resumeCleaning request.
            </summary>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.SendToBaseAsync">
            <summary>
            Sends a sendToBase request.
            </summary>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.StartCleaningAsync(I8Beef.Neato.Nucleo.Protocol.Services.HouseCleaning.StartCleaningParameters)">
            <summary>
            Sends a startCleaning request.
            </summary>
            <param name="parameters">Parameters.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.StopCleaningAsync">
            <summary>
            Sends a stopCleaning request.
            </summary>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.GetLocalStatsAsync">
            <summary>
            Sends a GetLocalStats request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.Services.LocalStats.LocalStats"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.GetRobotManualCleaningInfoAsync">
            <summary>
            Sends a GetRobotManualCleaningInfo request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.Services.ManualCleaning.RobotManualCleaningInfo"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.GetMapBoundariesAsync(I8Beef.Neato.Nucleo.Protocol.Services.Maps.GetMapBoundaries)">
            <summary>
            Sends a GetMapBoundaries request.
            </summary>
            <param name="parameters">Parameters.</param>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.Services.Maps.MapBoundaries"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.SetMapBoundariesAsync(I8Beef.Neato.Nucleo.Protocol.Services.Maps.SetMapBoundaries)">
            <summary>
            Sends a SetMapBoundaries request.
            </summary>
            <param name="parameters">Parameters.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.StartPersistentMapExplorationAsync">
            <summary>
            Sends a StartPersistentMapExploration request.
            </summary>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.GetPreferencesAsync">
            <summary>
            Sends a GetPreferences request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.SetPreferencesAsync(I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences)">
            <summary>
            Sends a SetPreferences request.
            </summary>
            <param name="parameters">Parameters.</param>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.Services.Preferences.Preferences"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.DisableScheduleAsync">
            <summary>
            Sends a DisableSchedule request.
            </summary>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.EnableScheduleAsync">
            <summary>
            Sends a EnableSchedule request.
            </summary>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.GetScheduleAsync">
            <summary>
            Sends a GetSchedule request.
            </summary>
            <returns>A <see cref="T:I8Beef.Neato.Nucleo.Protocol.Services.Schedule.Schedule"/>.</returns>
        </member>
        <member name="M:I8Beef.Neato.Robot.SetScheduleAsync(I8Beef.Neato.Nucleo.Protocol.Services.Schedule.Schedule)">
            <summary>
            Sends a SetSchedule request.
            </summary>
            <param name="parameters">Parameters.</param>
            <returns>An awaitable <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:I8Beef.Neato.RobotState">
            <summary>
            Robot state.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.RobotState.State">
            <summary>
            State.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.RobotState.Action">
            <summary>
            Action.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.RobotState.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.RobotState.Alert">
            <summary>
            Alert.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.RobotState.Cleaning">
            <summary>
            Cleaning information.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.RobotState.Details">
            <summary>
            Detail information.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.RobotState.AvailableCommands">
            <summary>
            Available commands.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.RobotState.AvailableServices">
            <summary>
            Available services.
            </summary>
        </member>
        <member name="P:I8Beef.Neato.RobotState.MetaInformation">
            <summary>
            Meta information.
            </summary>
        </member>
    </members>
</doc>
